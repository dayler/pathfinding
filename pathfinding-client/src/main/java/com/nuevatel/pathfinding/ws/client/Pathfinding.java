
package com.nuevatel.pathfinding.ws.client;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "pathfinding", targetNamespace = "http://ws.pathfinding.nuevatel.com/", wsdlLocation = "/Pathfinding.wsdl")
public class Pathfinding
    extends Service
{

    private final static URL PATHFINDING_WSDL_LOCATION;
    private final static WebServiceException PATHFINDING_EXCEPTION;
    private final static QName PATHFINDING_QNAME = new QName("http://ws.pathfinding.nuevatel.com/", "pathfinding");

    static {
        PATHFINDING_WSDL_LOCATION = com.nuevatel.pathfinding.ws.client.Pathfinding.class.getResource("/Pathfinding.wsdl");
        WebServiceException e = null;
        if (PATHFINDING_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find '/Pathfinding.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        PATHFINDING_EXCEPTION = e;
    }

    public Pathfinding() {
        super(__getWsdlLocation(), PATHFINDING_QNAME);
    }

    public Pathfinding(WebServiceFeature... features) {
        super(__getWsdlLocation(), PATHFINDING_QNAME, features);
    }

    public Pathfinding(URL wsdlLocation) {
        super(wsdlLocation, PATHFINDING_QNAME);
    }

    public Pathfinding(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PATHFINDING_QNAME, features);
    }

    public Pathfinding(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Pathfinding(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns PathfindingWSPort
     */
    @WebEndpoint(name = "PathfindingWsServicePort")
    public PathfindingWSPort getPathfindingWsServicePort() {
        return super.getPort(new QName("http://ws.pathfinding.nuevatel.com/", "PathfindingWsServicePort"), PathfindingWSPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PathfindingWSPort
     */
    @WebEndpoint(name = "PathfindingWsServicePort")
    public PathfindingWSPort getPathfindingWsServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.pathfinding.nuevatel.com/", "PathfindingWsServicePort"), PathfindingWSPort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PATHFINDING_EXCEPTION!= null) {
            throw PATHFINDING_EXCEPTION;
        }
        return PATHFINDING_WSDL_LOCATION;
    }

}
